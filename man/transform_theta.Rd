% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hello.R
\name{transform_theta}
\alias{transform_theta}
\title{Transform the vector of estimated regression coefficients}
\usage{
transform_theta(theta, tspr)
}
\arguments{
\item{theta}{Output vector of raw results of length \code{p+1} from function
\link{IRLS} or \link{ridge}.}

\item{tspr}{Output of \link{ts_preprocess}.}
}
\value{
A list of estimated parameters:
\itemize{
 \item{"alpha_hat"}{ Estimate of \code{alpha0}, a numerical value.}
 \item{"xi_hat"}{ Estimate of \code{xi}, the part of the parameters that
 correspond to matrix \code{Omega} when transformed by \code{Q}. A vector
 of length \code{(p-M)}.}
 \item{"delta_hat"}{ Estimate of \code{delta}, the part of the parameters that
 correspond to matrix \code{Phi}. A vector of length \code{M}, the number of
 monomials used for the construction of the thin-plate spline.}
 \item{"gamma_hat"}{ Estimate of \code{gamma}, the part of the parameters that
 correspond to matrix \code{Omega}. It holds true that 
 \code{gamma_hat = Q*xi_hat}. A vector of length \code{p}.}
 \item{"beta_hat"}{ Estimate of the regression function \code{beta0} 
 evaluated at the \code{p} points from \code{tobs}, where \code{X} was
 observed.}
}
}
\description{
Splits the vector of raw estimated coefficients (output of functions 
\link{IRLS} or \link{ridge}) into parts interpretable in the setup of 
thin-plate spline regression setup.
}
\examples{
d = 1       # dimension of domain
n = 50      # sample size
p = 10      # number of observed points in domain
p1 = 101 # size of the complete grid
alpha0 = 3  # intercept
beta0 = function(t) t^2 # regression coefficient function
sd.noiseEps = 0.1 # noise standard deviation
tgrid = seq(0,1,length=p1) # full grid of observation points
basis_fun = function(t,k) return(sin(2*pi*k*t)+t^k)
K = 5 # number of basis functions used in the expansion
bfX = list()
for(k in 1:K) bfX[[k]] = basis_fun(tgrid,k)
bcX = matrix(rnorm(n*K,mean=3,sd=5),ncol=K)  # basis coefficients

# Generate the raw data
gen = generate(alpha0, beta0, n, d, p, bfX, bcX, sd.noiseEps)

# Preprocess the data
X = gen$X; Y = gen$Y; tobs = gen$tobs
m = 2; # degree of thin-spline
tspr = ts_preprocess(X,tobs,m)

# Thin-plate spline ridge regression
res = ridge(tspr$Z,Y,1e-3,tspr$H)

# Transform the coefficients
transform_theta(res$theta_hat, tspr)
}
