% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hello.R
\name{ts_preprocess}
\alias{ts_preprocess}
\title{Pre-processing Raw Data for Thin-Plate Spline Regression}
\usage{
ts_preprocess(X, tobs, m, int_weights = TRUE, I.method = "chull", I = NULL)
}
\arguments{
\item{X}{Matrix of observed values of \code{X} of size 
\code{n}-times-\code{p}, one row per observation, columns corresponding to the 
positions in the rows of \code{tobs}.}

\item{tobs}{Domain locations for the observed points of \code{X}. Matrix
of size \code{p}-times-\code{d}, one row per domain point.}

\item{m}{Order of the thin-plate spline, positive integer.}

\item{int_weights}{Indicator whether the integrals functions are to be 
approximated only as a mean of function values (\code{int_weights=FALSE}), or
whether they should be computed as weighted sums of function values 
(\code{int_weights=TRUE}). In the latter case, weights are computed as
proportional to the respective areas of the Voronoi tesselation of the domain
\code{I} (works for dimension \code{d==1} or \code{d==2}). For dimension 
\code{d==1}, this is equivalent to the length of intervals associated 
to adjacent observation points. For \code{d>2}, no weighting is performed.}

\item{I.method}{Applicable only if \code{int_weights==TRUE}. 
Input method for the complete domain \code{I}
where the Voronoi tesselation for obtaining the weights is evaluated. 
Takes a value \code{"box"}
for \code{I} the smallest axes-aligned box in the domain, or \code{"chull"}
for \code{I} being a convex hull of points in the domain. By default set to 
\code{"chull"}. In dimension \code{d=1}, the two methods \code{"box"}
and \code{"chull"} are equivalent.}

\item{I}{Applicable only if \code{int_weights==TRUE}. A set of points 
specifying the complete domain \code{I} of the functional data.
In general, can be a \code{q}-times-\code{d} matrix, where \code{q}
is the number of points and \code{d} is the dimension. The matrix \code{I}
then specifies the point from which to compute the domain \code{I}: 
(a) If \code{method.I=="chull"}, the domain is the convex hull of \code{I}; 
(b) If \code{method.I=="box"}, the domain is the smallest axes-aligned box
that contains \code{I}. If \code{I} is \code{NULL} (by default), then 
\code{I} is taken to be the same as \code{x}. If \code{I.method=="box"}, 
\code{I} can be specified also by a pair of real values \code{a<b}, 
in which case we take \code{I} to be the axis-aligned sqare \code{[a,b]^d}.}
}
\value{
A list of values:
\itemize{
 \item{"Z"}{ A matrix of size \code{n}-times-\code{p+1} for regression 
 fitting. Corresponds to transformed regressors \code{X}.}
 \item{"H"}{ A penalty matrix of size \code{p+1}-times-\code{p+1} used for
 fitting the regression with thin-plate splines.}
 \item{"Q"}{ A matrix containing the null space of the rows of Phi of size
 \code{p}-times-\code{p-M}, where \code{M} is the number of monomials
 used for the construction of the thin-plate spline. This matrix is used to
 pass from parameters gamma to parametrization chi.}
 \item{"Omega"}{ A matrix of size \code{p}-times-\code{p} containing the 
 \link{eta}-transformed matrix of inter-point distances in \code{tobs}.}
 \item{"Phi"}{ A matrix of size \code{p}-times-\code{M} corresponding to the
 monomial part of the thin-plate spline.}
 \item{"degs"}{ A matrix of size \code{M}-times-\code{d} with degrees of the
 monomials in each dimension per row. Used for the construction of 
 \code{Phi}.}
 \item{"tobs"}{ The same as the input parameter \code{tobs}, for later use.}
 \item{"M"}{ Number of all monomials used, is equal to 
 \code{choose(m+d-1,d)}.}
 \item{"m"}{ Order of the spline, positive integer.}
 \item{"p"}{ Number of observed time points, positive integer.}
 \item{"d"}{ Dimension of domain, positive integer.}
 \item{"n"}{ Sample size, positive integer.}
}
}
\description{
Given the data generated by \link{generate} as an input, pre-processes the 
dataset to a form suitable for fitting thin-plate spline regression.
}
\examples{
d = 1       # dimension of domain
n = 50      # sample size
p = 10      # number of observed points in domain
p1 = 101 # size of the complete grid
alpha0 = 3  # intercept
beta0 = function(t) t^2 # regression coefficient function
sd.noiseEps = 0.1 # noise standard deviation
tgrid = seq(0,1,length=p1) # full grid of observation points
basis_fun = function(t,k) return(sin(2*pi*k*t)+t^k)
K = 5 # number of basis functions used in the expansion
bfX = list()
for(k in 1:K) bfX[[k]] = basis_fun(tgrid,k)
bcX = matrix(rnorm(n*K,mean=3,sd=5),ncol=K)  # basis coefficients

# Generate the raw data
gen = generate(alpha0, beta0, n, d, p, bfX, bcX, sd.noiseEps)

# Preprocess the data
X = gen$X; tobs = gen$tobs
m = 2; # degree of the thin-spline used
tspr = ts_preprocess(X,tobs,m)

# Thin-plate spline ridge regression
ridge(tspr$Z,gen$Y,1e-3,tspr$H)
}
