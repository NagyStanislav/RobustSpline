% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hello.R
\name{ts_preprocess_location}
\alias{ts_preprocess_location}
\title{Pre-processing Raw Data for Thin-Plate Multivariate Location Estimation}
\usage{
ts_preprocess_location(Y, tobs, r)
}
\arguments{
\item{Y}{Matrix of observed values of functional data \code{Y} of size 
\code{p}-times-\code{n}, one column per functional observation, 
rows corresponding to the positions in the rows of \code{tobs}. If matrix
\code{Y} does not contain any missing values \code{NA}, it is also 
possible to be supplied as a long vector of length \code{p*n}, stacked by
columns of the matrix \code{Y}. If \code{Y} contains missing values 
\code{NA}, it must be a matrix.}

\item{tobs}{Domain locations for the observed points of \code{X}. Matrix
of size \code{p}-times-\code{d}, one row per domain point.}

\item{r}{Order of the thin-plate spline, positive integer.}
}
\value{
A list of values:
\itemize{
 \item{"Y"}{ A vector of length \code{m} of all the reponses that are not 
 missing. If \code{Y} was a matrix without missing values, this is simply 
 \code{c(Y)}; if \code{Y} was a vector, this is directly \code{Y}. In case
 \code{Y} contained missing values, this is the elements of \code{c(Y)} that
 are not \code{NA}.}
 \item{"Z"}{ A matrix of size \code{m}-times-\code{p} for fitting the 
 penalized robust regression model for thin-plate coefficients.}
 \item{"H"}{ A penalty matrix of size \code{p}-times-\code{p} used for
 fitting the location estimation model with thin-plate splines.}
 \item{"Q"}{ A matrix containing the null space of the rows of Phi of size
 \code{p}-times-\code{p-M}, where \code{M} is the number of monomials
 used for the construction of the thin-plate spline. This matrix is used to
 pass from parameters gamma to parametrization chi.}
 \item{"Omega"}{ A matrix of size \code{p}-times-\code{p} containing the 
 \link{eta}-transformed matrix of inter-point distances in \code{tobs}.}
 \item{"Phi"}{ A matrix of size \code{p}-times-\code{M} corresponding to the
 monomial part of the thin-plate spline.}
 \item{"w"}{ A vector of weights of length \code{m}. Each weight corresponds
 to \code{1/(n*m[i])}, where \code{m[i]} is the number of observations for 
 the \code{i}-th function.}
 \item{"degs"}{ A matrix of size \code{M}-times-\code{d} with degrees of the
 monomials in each dimension per row. Used for the construction of 
 \code{Phi}.}
 \item{"tobs"}{ The same as the input parameter \code{tobs}, for later use.}
 \item{"M"}{ Number of all monomials used, is equal to 
 \code{choose(m+d-1,d)}.}
 \item{"r"}{ Order of the spline, positive integer.}
 \item{"p"}{ Number of observed time points, positive integer.}
 \item{"d"}{ Dimension of domain, positive integer.}
 \item{"n"}{ Sample size, positive integer.}
}
}
\description{
Given the discretely observed functional data as an input, pre-processes the 
dataset to a form suitable for fitting thin-plate spline functional location
estimation.
}
\examples{
d = 1  # dimension of the domain
m = 50 # number of observation times per function
tobs = matrix(runif(m*d), ncol=d) # matrix of observation times
n = 20 # sample size
truemeanf = function(x) 10+15*x[1]^2 # true mean function
truemean = apply(tobs,1,truemeanf) # discretized values of the true mean
Y = replicate(n, truemean + rnorm(m)) # matrix of discrete functiona data, size p*n
tsp = ts_preprocess_location(Y, tobs, 2) # preprocessing matrices 

lambda0 = 1e-5 # regularization parameter
res_IRLS = IRLS(Z = tsp$Z, Y = tsp$Y, lambda = lambda0, H = tsp$H, type = "square")
res_ridge = ridge(Z = tsp$Z, Y = tsp$Y, lambda = lambda0, H = tsp$H)
# resulting estimates of the parameters theta, using IRLS and ridge

# testing that ridge and IRLS (square) give the same results
all.equal(res_IRLS$theta_hat, res_ridge$theta_hat)

res = res_ridge
resf = transform_theta_location(res$theta_hat, tsp)

plot(rep(tobs,n), c(Y), cex=.2, pch=16)
points(tobs, truemean, pch=16, col="orange")
points(tobs, resf$beta_hat, col=2, pch=16)
}
