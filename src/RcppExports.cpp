// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// distn
arma::mat distn(arma::mat X, int n, int d);
RcppExport SEXP _RobustSpline_distn(SEXP XSEXP, SEXP nSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(distn(X, n, d));
    return rcpp_result_gen;
END_RCPP
}
// distnAB
arma::mat distnAB(arma::mat A, arma::mat B, int m, int n, int d);
RcppExport SEXP _RobustSpline_distnAB(SEXP ASEXP, SEXP BSEXP, SEXP mSEXP, SEXP nSEXP, SEXP dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type d(dSEXP);
    rcpp_result_gen = Rcpp::wrap(distnAB(A, B, m, n, d));
    return rcpp_result_gen;
END_RCPP
}
// psiwC
arma::vec psiwC(arma::vec t, int type, double tuning);
RcppExport SEXP _RobustSpline_psiwC(SEXP tSEXP, SEXP typeSEXP, SEXP tuningSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    Rcpp::traits::input_parameter< double >::type tuning(tuningSEXP);
    rcpp_result_gen = Rcpp::wrap(psiwC(t, type, tuning));
    return rcpp_result_gen;
END_RCPP
}
// IRLSC
Rcpp::List IRLSC(arma::mat Z, arma::vec Y, double lambda, arma::mat H, int type, double sc, arma::vec residsin, double tuning, double toler, int imax);
RcppExport SEXP _RobustSpline_IRLSC(SEXP ZSEXP, SEXP YSEXP, SEXP lambdaSEXP, SEXP HSEXP, SEXP typeSEXP, SEXP scSEXP, SEXP residsinSEXP, SEXP tuningSEXP, SEXP tolerSEXP, SEXP imaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    Rcpp::traits::input_parameter< int >::type type(typeSEXP);
    Rcpp::traits::input_parameter< double >::type sc(scSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type residsin(residsinSEXP);
    Rcpp::traits::input_parameter< double >::type tuning(tuningSEXP);
    Rcpp::traits::input_parameter< double >::type toler(tolerSEXP);
    Rcpp::traits::input_parameter< int >::type imax(imaxSEXP);
    rcpp_result_gen = Rcpp::wrap(IRLSC(Z, Y, lambda, H, type, sc, residsin, tuning, toler, imax));
    return rcpp_result_gen;
END_RCPP
}
// ridgeC
Rcpp::List ridgeC(arma::mat Z, arma::vec Y, double lambda, arma::mat H);
RcppExport SEXP _RobustSpline_ridgeC(SEXP ZSEXP, SEXP YSEXP, SEXP lambdaSEXP, SEXP HSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type H(HSEXP);
    rcpp_result_gen = Rcpp::wrap(ridgeC(Z, Y, lambda, H));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RobustSpline_distn", (DL_FUNC) &_RobustSpline_distn, 3},
    {"_RobustSpline_distnAB", (DL_FUNC) &_RobustSpline_distnAB, 5},
    {"_RobustSpline_psiwC", (DL_FUNC) &_RobustSpline_psiwC, 3},
    {"_RobustSpline_IRLSC", (DL_FUNC) &_RobustSpline_IRLSC, 10},
    {"_RobustSpline_ridgeC", (DL_FUNC) &_RobustSpline_ridgeC, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_RobustSpline(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
